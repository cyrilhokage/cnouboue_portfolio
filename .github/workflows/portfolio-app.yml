# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: cnouboue-portfolio

# triggers for our workflow
on:
  push:
    branches: 
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

# three job definition 
jobs:
  health-check-job: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
    services:
      postgres: # we need a postgres docker image to be booted, a side car service to run the tests that needs a db
        image: postgres
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9' # if you want multiple python version run just use matrix strategy in job config. See the documentation of GitHub Actions
      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version
      - name: Install dependencies # install application requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run Migrations # run migrations to create table in side car db container
        run: |
          python manage.py migrate
      - name: Run Tests # running tests
        run: | 
          python manage.py test --noinput 

  build:
    runs-on: ubuntu-latest
    needs: health-check-job
    if: github.ref == 'refs/heads/master'
    env:
      WEB_IMAGE: docker.pkg.github.com/cyrilhokage/cnouboue_portfolio/web
      SQL_ENGINE: django.db.backends.postgresql
      DATABASE: postgres
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
      SQL_USER: ${{ secrets.SQL_USER }}
      SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
      SQL_HOST: ${{ secrets.SQL_HOST }}
      SQL_PORT: ${{ secrets.SQL_PORT }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build & push Docker image
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/portfolio-web-image
          tag_with_sha: true
          tag_with_ref: true
